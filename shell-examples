#!/bin/bash
infile="day1_ranking.json"

for day in `seq 1 31`; do
  if [ ${#day} -eq 1 ]; then
    day="0${day}"
  fi
  cat ${infile} | grep 201809${day} > 201809${day}
done


declare -a arr=("pm25" "pm10" "so2" "o3" "no2" "co")
for air_pollutant in "${arr[@]}"
do
	python model.py ${air_pollutant} ile} &
done


# Loop over decimal range.
for cutoff_congestion in $(seq 0.5 0.1 1.5); do
	for day in `seq 1 31`; do
		if [ ${#day} -eq 1 ]; then
			day="0${day}"
		fi
		cat 201809_huantai | python local_grid_hourly_traffic.py cutoff_congestion > data/201809${day}_${cutoff_congestion}
	done
done

# Test if a file exists on hadoop.
# If exists, $? equals 0.
hadoopnj01 fs -test -e /user/rp-rd/hejiawei/smart-ep/environment_traffic/huantai/${_today}
if [ $? -eq 0 ]; then
	hadoopnj01 fs -rm /user/rp-rd/hejiawei/smart-ep/environment_traffic/huantai/${_today}
fi

if [ ${test} -eq 1 ]
then
	# Testing environment
	...
else
	# Production environment
	...
fi

# Delete ES data based on date format like "20190101".
curl -XPOST 'http://nj02-bda-expv-advsvr05-00.nj02.baidu.com:8083/environment_traffic/data/_delete_by_query?pretty' 
-d '{"query": {"bool": {"must": [{"match": {"city": "city_a"}},{"match": {"district": "district_a"}},
		 		 {"range": {"time": {"lte": "'${_tomorrow}'", "gte": "'${_today}'"}}}]}}}'

!! - replaced with the last command

!$ - replaced with the last argument of the last command

!^ - replaced with the first argument of the last command

!:# - replaced with the # argument of the last command (0 for the command itself), can be in range eg. *1-3* for first 3 arguments 
